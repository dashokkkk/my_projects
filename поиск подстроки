Марсоход должен исследовать странные каменные структуры: на поверхности скал обнаружена последовательность символов. Предположительно, эту последовательность создали разумные существа. Учёные предполагают, что эта последовательность содержит некие коды или тексты.
Для расшифровки необходимо выявить в последовательности самую длинную подстроку, состоящую из уникальных символов: наибольший ряд символов, в котором каждый символ встречается только один раз. Это поможет найти ключ к разгадке послания или просто даст понять, случайны ли эти символы, или в них есть порядок.
Напишите программу, которая принимает на вход строку и находит в ней наибольшую длину подстроки, в которой нет повторяющихся символов. Программа должна вернуть натуральное число — длину этой подстроки.
Используйте метод скользящего окна для решения задачи. Если в строке встретится дубликат, запомните длину получившейся подстроки и начинайте строить окно заново.
Формат ввода

Одна строка, состоящая из строчных латинских букв. Длина строки не превосходит 10 000 символов.
Формат вывода

Натуральное число — длина наибольшей подстроки с уникальными символами.
Пример 1

Ввод	
abcabcbb
Вывод
3

Пример 2

Ввод	
bbbbb
Вывод
1

def main(string):
    start = 0
    end = 0
    char_map = {}
    max_length = 0
    max_substring = ""
    for i in range(len(string)):
        if string[i] in char_map and char_map[string[i]] >= start:
            if i - start > max_length:
                max_length = i - start
                max_substring = string[start:i]
            start = char_map[string[i]] + 1
        char_map[string[i]] = i
    if len(string) - start > max_length:
        max_length = len(string) - start
        max_substring = string[start:]
    return len(max_substring)


if __name__ == '__main__':
    word = input()   
    result = main(word)
    print(result)
